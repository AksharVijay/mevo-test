{"version":3,"sources":["Components/Navbar/Navbar.js","Components/HomeZone/HomeZone.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","src","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","fetcher","fetch","then","response","json","HomeZone","useState","latitude","longitude","width","height","zoom","viewport","setViewport","selectedVec","setSelectedVec","useEffect","listener","e","key","window","addEventListener","removeEventListener","useRef","useSwr","data","error","vec","slice","maxZoom","mapStyle","mapboxApiAccessToken","process","onViewportChange","newViewport","map","vecs","parseFloat","position","onClick","preventDefault","transitionInterpolator","FlyToInterpolator","speed","transitionDuration","onClose","id","sourceId","sourceLayer","filter","minZoom","paint","property","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAmBeA,EAfA,WACX,OACI,8BACI,sBAAKC,UAAU,0DAAf,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,SACI,qBAAKC,IAAI,iDAAiDF,UAAW,OAAOG,IAAI,WAEhF,wBAAQH,UAAU,iBAAiBI,KAAK,SAASC,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,oBAA5J,SACI,sBAAMT,UAAU,gC,gCCNlCU,G,YAAU,kBAAaC,MAAK,WAAL,aAAeC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,YA6GvDC,EA3GE,WAAO,IAAD,EAEcC,mBAAS,CACtCC,UAAW,UACXC,UAAW,WACXC,MAAO,QACPC,OAAQ,QACRC,KAAM,KAPS,mBAEXC,EAFW,KAEDC,EAFC,OAUmBP,mBAAS,MAV5B,mBAUZQ,EAVY,KAUCC,EAVD,KAYnBC,qBAAU,WACN,IAAMC,EAAW,SAAAC,GACA,WAAVA,EAAEC,KACDJ,EAAe,OAKvB,OAFAK,OAAOC,iBAAiB,UAAWJ,GAE5B,WACHG,OAAOE,oBAAoB,UAAWL,MAI3C,IAEYM,mBAAf,IA3BmB,EA+BKC,YAFZ,6CAEwBxB,GAA5ByB,EA/BW,EA+BXA,KAAMC,EA/BK,EA+BLA,MAERC,EAAMF,IAASC,EAAQD,EAAKG,MAAM,EAAE,KAAQ,GAgBlD,OAAQ,oCAAO,eAAC,IAAD,2BAAgBhB,GAAhB,IACfiB,QAAW,GACXC,SAAW,wDACXC,qBAAuBC,iGAEvBC,iBAAmB,SAAAC,GACfrB,EAAY,eAAIqB,KANL,UASVP,EAAIQ,KAAI,SAAAC,GAAI,OAEb,cAAC,IAAD,CAAS7B,SAAU8B,WAAWD,EAAKE,SAAS/B,UAAWC,UAAW6B,WAAWD,EAAKE,SAAS9B,WAA3F,SACQ,wBACAlB,UAAU,aACViD,QAAY,SAAArB,GACRA,EAAEsB,iBACFzB,EAAeqB,GAEfvB,EAAY,2BACLD,GADI,IAEP6B,uBAAyB,IAAIC,IAAkB,CAAEC,MAAQ,IACzDC,mBAAqB,WAT7B,SAYI,qBAAKpD,IAAI,+DAA+DC,IAAI,YAKtFqB,EACE,cAAC,IAAD,CACIP,SAAU8B,WAAWvB,EAAYwB,SAAS/B,UAC1CC,UAAW6B,WAAWvB,EAAYwB,SAAS9B,WAC3CqC,QAAY,WACR9B,EAAe,OAJvB,SAMI,gCACI,kCAAI,gDAAJ,IAAiCsB,WAAWvB,EAAYwB,SAAS/B,aACjE,kCAAI,iDAAJ,IAAkC8B,WAAWvB,EAAYwB,SAAS9B,mBAG1E,KAEJ,cAAC,IAAD,CACEsC,GAAG,eACHC,SAAS,YACTC,YAAY,WACZC,OAAQ,CAAC,KAAM,UAAW,QAC1BvD,KAAK,iBACLwD,QAAS,GACTC,MAhEa,CACf,uBAAwB,OACxB,wBAAyB,CACvBzD,KAAM,WACN0D,SAAU,UAEZ,sBAAuB,CACrB1D,KAAM,WACN0D,SAAU,cAEZ,yBAA0B,UAItB,QCvCGC,MAZf,WACE,OACE,cAAC,IAAD,UACI,sBAAK/D,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UCCKgE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtD,MAAK,YAAkD,IAA/CuD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2e45840d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navbar.css';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light bg-navcol\">\r\n                <Link to=\"/\" >\r\n                    <img src=\"https://assets.mevo.co.nz/brand/logo-light.svg\" className= \"logo\" alt=\"logo\"/>\r\n                </Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React, {useState, useEffect, useRef} from 'react';\r\nimport useSwr from 'swr';\r\nimport ReactMapGL, { Marker, Popup, FlyToInterpolator, Layer} from 'react-map-gl';\r\nimport useSupercluster from 'use-supercluster';\r\nimport './HomeZone.css';\r\n\r\nconst fetcher = (...args) => fetch(...args).then(response => response.json());\r\n\r\nconst HomeZone = () => {\r\n\r\n    const  [viewport, setViewport] = useState({\r\n        latitude: -41.291099,\r\n        longitude: 174.786042,\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        zoom: 12\r\n    });\r\n\r\n    const [selectedVec, setSelectedVec] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const listener = e => {\r\n            if(e.key === \"Escape\"){\r\n                setSelectedVec(null);\r\n            }\r\n        };\r\n        window.addEventListener(\"keydown\", listener);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", listener);\r\n        }\r\n\r\n\r\n    }, []);\r\n\r\n    const mapRef = useRef();\r\n\r\n    const url = \"https://api.mevo.co.nz/public/vehicles/all\";\r\n\r\n    const { data, error } = useSwr(url, fetcher);\r\n\r\n    const vec = data && !error ? data.slice(0,2000) : [];\r\n\r\n    const paintLayer = {\r\n        'fill-extrusion-color': '#aaa',\r\n        'fill-extrusion-height': {\r\n          type: 'identity',\r\n          property: 'height'\r\n        },\r\n        'fill-extrusion-base': {\r\n          type: 'identity',\r\n          property: 'min_height'\r\n        },\r\n        'fill-extrusion-opacity': 0.6\r\n      };\r\n\r\n\r\n    return( <div > <ReactMapGL {...viewport} \r\n    maxZoom = {20} \r\n    mapStyle = \"mapbox://styles/aksharvijay/ckklz7npa1jaw17n4c6t5984x\"\r\n    mapboxApiAccessToken ={process.env.REACT_APP_MAPBOX_TOKEN}\r\n\r\n    onViewportChange ={newViewport => {\r\n        setViewport({...newViewport});\r\n    }}\r\n    >\r\n        {vec.map(vecs => (\r\n        \r\n        <Marker  latitude={parseFloat(vecs.position.latitude)} longitude={parseFloat(vecs.position.longitude)}>\r\n                <button \r\n                className=\"marker-btn\"\r\n                onClick = { e => {\r\n                    e.preventDefault();\r\n                    setSelectedVec(vecs);\r\n\r\n                    setViewport({\r\n                        ...viewport,\r\n                        transitionInterpolator : new FlyToInterpolator({ speed : 5}),\r\n                        transitionDuration : \"auto\"\r\n                    })\r\n                }}>\r\n                    <img src=\"https://assets.mevo.co.nz/vehicles/pin-vehicle-available.png\" alt=\"\"/>\r\n                </button>\r\n            </Marker>\r\n        ))}\r\n\r\n        { selectedVec ? (\r\n            <Popup \r\n                latitude={parseFloat(selectedVec.position.latitude)} \r\n                longitude={parseFloat(selectedVec.position.longitude)}\r\n                onClose = { () =>{\r\n                    setSelectedVec(null);\r\n                }}>\r\n                <div>\r\n                    <p> <strong>Latitude :</strong> {parseFloat(selectedVec.position.latitude)}</p>\r\n                    <p> <strong>Longitude :</strong> {parseFloat(selectedVec.position.longitude)}</p>\r\n                </div>\r\n            </Popup>\r\n        ) : null}\r\n\r\n        <Layer\r\n          id=\"3d-buildings\"\r\n          sourceId=\"composite\"\r\n          sourceLayer=\"building\"\r\n          filter={['==', 'extrude', 'true']}\r\n          type=\"fill-extrusion\"\r\n          minZoom={14}\r\n          paint={paintLayer}\r\n        />\r\n     \r\n      \r\n\r\n    </ReactMapGL> </div>)\r\n}\r\n\r\nexport default HomeZone\r\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from './Components/Navbar/Navbar';\nimport { BrowserRouter } from 'react-router-dom';\nimport HomeZone from './Components/HomeZone/HomeZone';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n        <div className=\"App\">\n          <Navbar/>\n          <HomeZone/>\n        </div>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}